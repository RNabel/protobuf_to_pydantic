"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DemoEnum:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DemoEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DemoEnum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    zero: _DemoEnum.ValueType  # 0
    one: _DemoEnum.ValueType  # 1
    two: _DemoEnum.ValueType  # 3

class DemoEnum(_DemoEnum, metaclass=_DemoEnumEnumTypeWrapper): ...

zero: DemoEnum.ValueType  # 0
one: DemoEnum.ValueType  # 1
two: DemoEnum.ValueType  # 3
global___DemoEnum = DemoEnum

@typing.final
class DemoMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EARTH_FIELD_NUMBER: builtins.int
    MERCURY_FIELD_NUMBER: builtins.int
    MARS_FIELD_NUMBER: builtins.int
    earth: builtins.str
    mercury: builtins.str
    mars: builtins.str
    def __init__(
        self,
        *,
        earth: builtins.str = ...,
        mercury: builtins.str = ...,
        mars: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["earth", b"earth", "mars", b"mars", "mercury", b"mercury"]) -> None: ...

global___DemoMessage = DemoMessage
