"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class BasicTypesMessage(google.protobuf.message.Message):
    """Message to test all basic protobuf types for round-trip conversion"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INT32_FIELD_FIELD_NUMBER: builtins.int
    INT64_FIELD_FIELD_NUMBER: builtins.int
    UINT32_FIELD_FIELD_NUMBER: builtins.int
    UINT64_FIELD_FIELD_NUMBER: builtins.int
    SINT32_FIELD_FIELD_NUMBER: builtins.int
    SINT64_FIELD_FIELD_NUMBER: builtins.int
    FIXED32_FIELD_FIELD_NUMBER: builtins.int
    FIXED64_FIELD_FIELD_NUMBER: builtins.int
    SFIXED32_FIELD_FIELD_NUMBER: builtins.int
    SFIXED64_FIELD_FIELD_NUMBER: builtins.int
    FLOAT_FIELD_FIELD_NUMBER: builtins.int
    DOUBLE_FIELD_FIELD_NUMBER: builtins.int
    BOOL_FIELD_FIELD_NUMBER: builtins.int
    STRING_FIELD_FIELD_NUMBER: builtins.int
    BYTES_FIELD_FIELD_NUMBER: builtins.int
    REPEATED_INT32_FIELD_NUMBER: builtins.int
    REPEATED_INT64_FIELD_NUMBER: builtins.int
    REPEATED_UINT32_FIELD_NUMBER: builtins.int
    REPEATED_UINT64_FIELD_NUMBER: builtins.int
    REPEATED_SINT32_FIELD_NUMBER: builtins.int
    REPEATED_SINT64_FIELD_NUMBER: builtins.int
    REPEATED_FIXED32_FIELD_NUMBER: builtins.int
    REPEATED_FIXED64_FIELD_NUMBER: builtins.int
    REPEATED_SFIXED32_FIELD_NUMBER: builtins.int
    REPEATED_SFIXED64_FIELD_NUMBER: builtins.int
    REPEATED_FLOAT_FIELD_NUMBER: builtins.int
    REPEATED_DOUBLE_FIELD_NUMBER: builtins.int
    REPEATED_BOOL_FIELD_NUMBER: builtins.int
    REPEATED_STRING_FIELD_NUMBER: builtins.int
    REPEATED_BYTES_FIELD_NUMBER: builtins.int
    OPTIONAL_INT32_FIELD_NUMBER: builtins.int
    OPTIONAL_STRING_FIELD_NUMBER: builtins.int
    OPTIONAL_BOOL_FIELD_NUMBER: builtins.int
    int32_field: builtins.int
    """Numeric types"""

    int64_field: builtins.int
    uint32_field: builtins.int
    uint64_field: builtins.int
    sint32_field: builtins.int
    sint64_field: builtins.int
    fixed32_field: builtins.int
    fixed64_field: builtins.int
    sfixed32_field: builtins.int
    sfixed64_field: builtins.int
    float_field: builtins.float
    """Floating point types"""

    double_field: builtins.float
    bool_field: builtins.bool
    """Boolean type"""

    string_field: typing.Text
    """String and bytes types"""

    bytes_field: builtins.bytes
    @property
    def repeated_int32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Repeated fields for each type"""
        pass
    @property
    def repeated_int64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_uint32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_uint64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sint32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sint64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_fixed32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_fixed64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sfixed32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sfixed64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_float(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def repeated_double(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def repeated_bool(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
    @property
    def repeated_string(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def repeated_bytes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    optional_int32: builtins.int
    """Optional fields for testing null handling"""

    optional_string: typing.Text
    optional_bool: builtins.bool
    def __init__(self,
        *,
        int32_field: builtins.int = ...,
        int64_field: builtins.int = ...,
        uint32_field: builtins.int = ...,
        uint64_field: builtins.int = ...,
        sint32_field: builtins.int = ...,
        sint64_field: builtins.int = ...,
        fixed32_field: builtins.int = ...,
        fixed64_field: builtins.int = ...,
        sfixed32_field: builtins.int = ...,
        sfixed64_field: builtins.int = ...,
        float_field: builtins.float = ...,
        double_field: builtins.float = ...,
        bool_field: builtins.bool = ...,
        string_field: typing.Text = ...,
        bytes_field: builtins.bytes = ...,
        repeated_int32: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_int64: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_uint32: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_uint64: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_sint32: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_sint64: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_fixed32: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_fixed64: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_sfixed32: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_sfixed64: typing.Optional[typing.Iterable[builtins.int]] = ...,
        repeated_float: typing.Optional[typing.Iterable[builtins.float]] = ...,
        repeated_double: typing.Optional[typing.Iterable[builtins.float]] = ...,
        repeated_bool: typing.Optional[typing.Iterable[builtins.bool]] = ...,
        repeated_string: typing.Optional[typing.Iterable[typing.Text]] = ...,
        repeated_bytes: typing.Optional[typing.Iterable[builtins.bytes]] = ...,
        optional_int32: typing.Optional[builtins.int] = ...,
        optional_string: typing.Optional[typing.Text] = ...,
        optional_bool: typing.Optional[builtins.bool] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_optional_bool",b"_optional_bool","_optional_int32",b"_optional_int32","_optional_string",b"_optional_string","optional_bool",b"optional_bool","optional_int32",b"optional_int32","optional_string",b"optional_string"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_optional_bool",b"_optional_bool","_optional_int32",b"_optional_int32","_optional_string",b"_optional_string","bool_field",b"bool_field","bytes_field",b"bytes_field","double_field",b"double_field","fixed32_field",b"fixed32_field","fixed64_field",b"fixed64_field","float_field",b"float_field","int32_field",b"int32_field","int64_field",b"int64_field","optional_bool",b"optional_bool","optional_int32",b"optional_int32","optional_string",b"optional_string","repeated_bool",b"repeated_bool","repeated_bytes",b"repeated_bytes","repeated_double",b"repeated_double","repeated_fixed32",b"repeated_fixed32","repeated_fixed64",b"repeated_fixed64","repeated_float",b"repeated_float","repeated_int32",b"repeated_int32","repeated_int64",b"repeated_int64","repeated_sfixed32",b"repeated_sfixed32","repeated_sfixed64",b"repeated_sfixed64","repeated_sint32",b"repeated_sint32","repeated_sint64",b"repeated_sint64","repeated_string",b"repeated_string","repeated_uint32",b"repeated_uint32","repeated_uint64",b"repeated_uint64","sfixed32_field",b"sfixed32_field","sfixed64_field",b"sfixed64_field","sint32_field",b"sint32_field","sint64_field",b"sint64_field","string_field",b"string_field","uint32_field",b"uint32_field","uint64_field",b"uint64_field"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optional_bool",b"_optional_bool"]) -> typing.Optional[typing_extensions.Literal["optional_bool"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optional_int32",b"_optional_int32"]) -> typing.Optional[typing_extensions.Literal["optional_int32"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_optional_string",b"_optional_string"]) -> typing.Optional[typing_extensions.Literal["optional_string"]]: ...
global___BasicTypesMessage = BasicTypesMessage

class EdgeCasesMessage(google.protobuf.message.Message):
    """Message for testing edge cases"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MIN_INT32_FIELD_NUMBER: builtins.int
    MAX_INT32_FIELD_NUMBER: builtins.int
    MIN_INT64_FIELD_NUMBER: builtins.int
    MAX_INT64_FIELD_NUMBER: builtins.int
    MIN_UINT32_FIELD_NUMBER: builtins.int
    MAX_UINT32_FIELD_NUMBER: builtins.int
    MIN_UINT64_FIELD_NUMBER: builtins.int
    MAX_UINT64_FIELD_NUMBER: builtins.int
    ZERO_FLOAT_FIELD_NUMBER: builtins.int
    NEGATIVE_ZERO_FLOAT_FIELD_NUMBER: builtins.int
    INFINITY_FLOAT_FIELD_NUMBER: builtins.int
    NEGATIVE_INFINITY_FLOAT_FIELD_NUMBER: builtins.int
    NAN_FLOAT_FIELD_NUMBER: builtins.int
    ZERO_DOUBLE_FIELD_NUMBER: builtins.int
    NEGATIVE_ZERO_DOUBLE_FIELD_NUMBER: builtins.int
    INFINITY_DOUBLE_FIELD_NUMBER: builtins.int
    NEGATIVE_INFINITY_DOUBLE_FIELD_NUMBER: builtins.int
    NAN_DOUBLE_FIELD_NUMBER: builtins.int
    EMPTY_STRING_FIELD_NUMBER: builtins.int
    EMPTY_BYTES_FIELD_NUMBER: builtins.int
    UNICODE_STRING_FIELD_NUMBER: builtins.int
    EMOJI_STRING_FIELD_NUMBER: builtins.int
    min_int32: builtins.int
    """Min/max values for numeric types"""

    max_int32: builtins.int
    min_int64: builtins.int
    max_int64: builtins.int
    min_uint32: builtins.int
    max_uint32: builtins.int
    min_uint64: builtins.int
    max_uint64: builtins.int
    zero_float: builtins.float
    """Special float/double values"""

    negative_zero_float: builtins.float
    infinity_float: builtins.float
    negative_infinity_float: builtins.float
    nan_float: builtins.float
    zero_double: builtins.float
    negative_zero_double: builtins.float
    infinity_double: builtins.float
    negative_infinity_double: builtins.float
    nan_double: builtins.float
    empty_string: typing.Text
    """Empty string and bytes"""

    empty_bytes: builtins.bytes
    unicode_string: typing.Text
    """Unicode strings"""

    emoji_string: typing.Text
    def __init__(self,
        *,
        min_int32: builtins.int = ...,
        max_int32: builtins.int = ...,
        min_int64: builtins.int = ...,
        max_int64: builtins.int = ...,
        min_uint32: builtins.int = ...,
        max_uint32: builtins.int = ...,
        min_uint64: builtins.int = ...,
        max_uint64: builtins.int = ...,
        zero_float: builtins.float = ...,
        negative_zero_float: builtins.float = ...,
        infinity_float: builtins.float = ...,
        negative_infinity_float: builtins.float = ...,
        nan_float: builtins.float = ...,
        zero_double: builtins.float = ...,
        negative_zero_double: builtins.float = ...,
        infinity_double: builtins.float = ...,
        negative_infinity_double: builtins.float = ...,
        nan_double: builtins.float = ...,
        empty_string: typing.Text = ...,
        empty_bytes: builtins.bytes = ...,
        unicode_string: typing.Text = ...,
        emoji_string: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["emoji_string",b"emoji_string","empty_bytes",b"empty_bytes","empty_string",b"empty_string","infinity_double",b"infinity_double","infinity_float",b"infinity_float","max_int32",b"max_int32","max_int64",b"max_int64","max_uint32",b"max_uint32","max_uint64",b"max_uint64","min_int32",b"min_int32","min_int64",b"min_int64","min_uint32",b"min_uint32","min_uint64",b"min_uint64","nan_double",b"nan_double","nan_float",b"nan_float","negative_infinity_double",b"negative_infinity_double","negative_infinity_float",b"negative_infinity_float","negative_zero_double",b"negative_zero_double","negative_zero_float",b"negative_zero_float","unicode_string",b"unicode_string","zero_double",b"zero_double","zero_float",b"zero_float"]) -> None: ...
global___EdgeCasesMessage = EdgeCasesMessage
