"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import example.example_proto.common.single_pb2
import google.protobuf.descriptor
import google.protobuf.empty_pb2
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SexType:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _SexTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SexType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    man: _SexType.ValueType  # 0
    women: _SexType.ValueType  # 1
class SexType(_SexType, metaclass=_SexTypeEnumTypeWrapper):
    pass

man: SexType.ValueType  # 0
women: SexType.ValueType  # 1
global___SexType = SexType


class _OptionalEnum:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _OptionalEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OptionalEnum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FOO: _OptionalEnum.ValueType  # 0
    BAR: _OptionalEnum.ValueType  # 1
    BAZ: _OptionalEnum.ValueType  # 2
class OptionalEnum(_OptionalEnum, metaclass=_OptionalEnumEnumTypeWrapper):
    pass

FOO: OptionalEnum.ValueType  # 0
BAR: OptionalEnum.ValueType  # 1
BAZ: OptionalEnum.ValueType  # 2
global___OptionalEnum = OptionalEnum


class UserMessage(google.protobuf.message.Message):
    """user info"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    SEX_FIELD_NUMBER: builtins.int
    DEMO_FIELD_NUMBER: builtins.int
    IS_ADULT_FIELD_NUMBER: builtins.int
    USER_NAME_FIELD_NUMBER: builtins.int
    DEMO_MESSAGE_FIELD_NUMBER: builtins.int
    uid: typing.Text
    """p2p: {"required": true, "example": "10086", "title": "UID", "description": "user union id"}"""

    age: builtins.int
    """p2p: {"example": 18, "title": "use age", "ge": 0}"""

    height: builtins.float
    """p2p: {"ge": 0, "le": 2.5}"""

    sex: global___SexType.ValueType
    demo: example.example_proto.common.single_pb2.DemoEnum.ValueType
    is_adult: builtins.bool
    user_name: typing.Text
    """p2p: {"description": "user name"}
    p2p: {"default": "", "min_length": 1, "max_length": "10", "example": "so1n"}
    """

    @property
    def demo_message(self) -> example.example_proto.common.single_pb2.DemoMessage:
        """p2p: {"extra": {"customer_string": "c1", "customer_int": 1}}"""
        pass
    def __init__(self,
        *,
        uid: typing.Text = ...,
        age: builtins.int = ...,
        height: builtins.float = ...,
        sex: global___SexType.ValueType = ...,
        demo: example.example_proto.common.single_pb2.DemoEnum.ValueType = ...,
        is_adult: builtins.bool = ...,
        user_name: typing.Text = ...,
        demo_message: typing.Optional[example.example_proto.common.single_pb2.DemoMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["demo_message",b"demo_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["age",b"age","demo",b"demo","demo_message",b"demo_message","height",b"height","is_adult",b"is_adult","sex",b"sex","uid",b"uid","user_name",b"user_name"]) -> None: ...
global___UserMessage = UserMessage

class OtherMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    METADATA_FIELD_NUMBER: builtins.int
    DOUBLE_VALUE_FIELD_NUMBER: builtins.int
    FIELD_MASK_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> google.protobuf.struct_pb2.Struct: ...
    @property
    def double_value(self) -> google.protobuf.wrappers_pb2.DoubleValue: ...
    @property
    def field_mask(self) -> google.protobuf.field_mask_pb2.FieldMask: ...
    def __init__(self,
        *,
        metadata: typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        double_value: typing.Optional[google.protobuf.wrappers_pb2.DoubleValue] = ...,
        field_mask: typing.Optional[google.protobuf.field_mask_pb2.FieldMask] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_field_mask",b"_field_mask","double_value",b"double_value","field_mask",b"field_mask","metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_field_mask",b"_field_mask","double_value",b"double_value","field_mask",b"field_mask","metadata",b"metadata"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_field_mask",b"_field_mask"]) -> typing.Optional[typing_extensions.Literal["field_mask"]]: ...
global___OtherMessage = OtherMessage

class MapMessage(google.protobuf.message.Message):
    """test map message and bad message"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class UserMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___UserMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___UserMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class UserFlagEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.bool
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    USER_MAP_FIELD_NUMBER: builtins.int
    USER_FLAG_FIELD_NUMBER: builtins.int
    @property
    def user_map(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___UserMessage]: ...
    @property
    def user_flag(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bool]: ...
    def __init__(self,
        *,
        user_map: typing.Optional[typing.Mapping[typing.Text, global___UserMessage]] = ...,
        user_flag: typing.Optional[typing.Mapping[typing.Text, builtins.bool]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["user_flag",b"user_flag","user_map",b"user_map"]) -> None: ...
global___MapMessage = MapMessage

class RepeatedMessage(google.protobuf.message.Message):
    """test repeated msg"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STR_LIST_FIELD_NUMBER: builtins.int
    INT_LIST_FIELD_NUMBER: builtins.int
    USER_LIST_FIELD_NUMBER: builtins.int
    @property
    def str_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """p2p: {"min_items": 3, "max_items": 5}"""
        pass
    @property
    def int_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """p2p: {"min_items": 1, "max_items": 5, "unique_items": true}"""
        pass
    @property
    def user_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserMessage]: ...
    def __init__(self,
        *,
        str_list: typing.Optional[typing.Iterable[typing.Text]] = ...,
        int_list: typing.Optional[typing.Iterable[builtins.int]] = ...,
        user_list: typing.Optional[typing.Iterable[global___UserMessage]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["int_list",b"int_list","str_list",b"str_list","user_list",b"user_list"]) -> None: ...
global___RepeatedMessage = RepeatedMessage

class NestedMessage(google.protobuf.message.Message):
    """test nested message"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _IncludeEnum:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _IncludeEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NestedMessage._IncludeEnum.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        zero: NestedMessage._IncludeEnum.ValueType  # 0
        one: NestedMessage._IncludeEnum.ValueType  # 1
        two: NestedMessage._IncludeEnum.ValueType  # 2
    class IncludeEnum(_IncludeEnum, metaclass=_IncludeEnumEnumTypeWrapper):
        pass

    zero: NestedMessage.IncludeEnum.ValueType  # 0
    one: NestedMessage.IncludeEnum.ValueType  # 1
    two: NestedMessage.IncludeEnum.ValueType  # 2

    class UserPayMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        BANK_NUMBER_FIELD_NUMBER: builtins.int
        EXP_FIELD_NUMBER: builtins.int
        UUID_FIELD_NUMBER: builtins.int
        bank_number: typing.Text
        """p2p: {"type": "p2p@import|pydantic.types|PaymentCardNumber"}"""

        @property
        def exp(self) -> google.protobuf.timestamp_pb2.Timestamp:
            """p2p: {"default_factory": "p2p@local|exp_time"}"""
            pass
        uuid: typing.Text
        """p2p: {"default_factory": "p2p@local|uuid4"}"""

        def __init__(self,
            *,
            bank_number: typing.Text = ...,
            exp: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
            uuid: typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["exp",b"exp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bank_number",b"bank_number","exp",b"exp","uuid",b"uuid"]) -> None: ...

    class UserListMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___RepeatedMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___RepeatedMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class UserMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___MapMessage: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___MapMessage] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    USER_LIST_MAP_FIELD_NUMBER: builtins.int
    USER_MAP_FIELD_NUMBER: builtins.int
    USER_PAY_FIELD_NUMBER: builtins.int
    INCLUDE_ENUM_FIELD_NUMBER: builtins.int
    NOT_ENABLE_USER_PAY_FIELD_NUMBER: builtins.int
    EMPTY_FIELD_NUMBER: builtins.int
    AFTER_REFER_FIELD_NUMBER: builtins.int
    @property
    def user_list_map(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___RepeatedMessage]: ...
    @property
    def user_map(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___MapMessage]: ...
    @property
    def user_pay(self) -> global___NestedMessage.UserPayMessage: ...
    include_enum: global___NestedMessage.IncludeEnum.ValueType
    @property
    def not_enable_user_pay(self) -> global___NestedMessage.UserPayMessage:
        """p2p: {"enable": false}"""
        pass
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def after_refer(self) -> global___AfterReferMessage: ...
    def __init__(self,
        *,
        user_list_map: typing.Optional[typing.Mapping[typing.Text, global___RepeatedMessage]] = ...,
        user_map: typing.Optional[typing.Mapping[typing.Text, global___MapMessage]] = ...,
        user_pay: typing.Optional[global___NestedMessage.UserPayMessage] = ...,
        include_enum: global___NestedMessage.IncludeEnum.ValueType = ...,
        not_enable_user_pay: typing.Optional[global___NestedMessage.UserPayMessage] = ...,
        empty: typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        after_refer: typing.Optional[global___AfterReferMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["after_refer",b"after_refer","empty",b"empty","not_enable_user_pay",b"not_enable_user_pay","user_pay",b"user_pay"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["after_refer",b"after_refer","empty",b"empty","include_enum",b"include_enum","not_enable_user_pay",b"not_enable_user_pay","user_list_map",b"user_list_map","user_map",b"user_map","user_pay",b"user_pay"]) -> None: ...
global___NestedMessage = NestedMessage

class AfterReferMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    uid: typing.Text
    """p2p: {"miss_default": true, "example": "10086", "title": "UID", "description": "user union id"}"""

    age: builtins.int
    """p2p: {"example": 18, "title": "use age", "ge": 0}"""

    def __init__(self,
        *,
        uid: typing.Text = ...,
        age: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["age",b"age","uid",b"uid"]) -> None: ...
global___AfterReferMessage = AfterReferMessage

class InvoiceItem(google.protobuf.message.Message):
    """Test self-referencing Messages
    from: https://github.com/so1n/protobuf_to_pydantic/issues/7#issuecomment-1490705932
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    name: typing.Text
    amount: builtins.int
    quantity: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InvoiceItem]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        amount: builtins.int = ...,
        quantity: builtins.int = ...,
        items: typing.Optional[typing.Iterable[global___InvoiceItem]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","items",b"items","name",b"name","quantity",b"quantity"]) -> None: ...
global___InvoiceItem = InvoiceItem

class EmptyMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___EmptyMessage = EmptyMessage

class OptionalMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class IntMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.int
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    ITEM_FIELD_NUMBER: builtins.int
    STR_LIST_FIELD_NUMBER: builtins.int
    INT_MAP_FIELD_NUMBER: builtins.int
    DEFAULT_TEMPLATE_TEST_FIELD_NUMBER: builtins.int
    x: typing.Text
    y: builtins.int
    """p2p: {"example": 18, "title": "use age", "ge": 0, "alias": "yy"}"""

    name: typing.Text
    age: builtins.int
    @property
    def item(self) -> global___InvoiceItem: ...
    @property
    def str_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def int_map(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    default_template_test: builtins.float
    """p2p: {"default_template": "p2p@timestamp|10"}"""

    def __init__(self,
        *,
        x: typing.Text = ...,
        y: builtins.int = ...,
        name: typing.Optional[typing.Text] = ...,
        age: typing.Optional[builtins.int] = ...,
        item: typing.Optional[global___InvoiceItem] = ...,
        str_list: typing.Optional[typing.Iterable[typing.Text]] = ...,
        int_map: typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        default_template_test: builtins.float = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_age",b"_age","_item",b"_item","_name",b"_name","a",b"a","age",b"age","item",b"item","name",b"name","x",b"x","y",b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_age",b"_age","_item",b"_item","_name",b"_name","a",b"a","age",b"age","default_template_test",b"default_template_test","int_map",b"int_map","item",b"item","name",b"name","str_list",b"str_list","x",b"x","y",b"y"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_age",b"_age"]) -> typing.Optional[typing_extensions.Literal["age"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_item",b"_item"]) -> typing.Optional[typing_extensions.Literal["item"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_name",b"_name"]) -> typing.Optional[typing_extensions.Literal["name"]]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["a",b"a"]) -> typing.Optional[typing_extensions.Literal["x","y"]]: ...
global___OptionalMessage = OptionalMessage

class InvoiceItem2(google.protobuf.message.Message):
    """Test Circular references
    from: https://github.com/so1n/protobuf_to_pydantic/issues/57
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    INVOICE_FIELD_NUMBER: builtins.int
    name: typing.Text
    amount: builtins.int
    quantity: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InvoiceItem2]: ...
    @property
    def invoice(self) -> global___Invoice3: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        amount: builtins.int = ...,
        quantity: builtins.int = ...,
        items: typing.Optional[typing.Iterable[global___InvoiceItem2]] = ...,
        invoice: typing.Optional[global___Invoice3] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["invoice",b"invoice"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","invoice",b"invoice","items",b"items","name",b"name","quantity",b"quantity"]) -> None: ...
global___InvoiceItem2 = InvoiceItem2

class Invoice3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    name: typing.Text
    amount: builtins.int
    quantity: builtins.int
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InvoiceItem2]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        amount: builtins.int = ...,
        quantity: builtins.int = ...,
        items: typing.Optional[typing.Iterable[global___InvoiceItem2]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","items",b"items","name",b"name","quantity",b"quantity"]) -> None: ...
global___Invoice3 = Invoice3

class RootMessage(google.protobuf.message.Message):
    """Test Message references
    from: https://github.com/so1n/protobuf_to_pydantic/issues/64
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIELD1_FIELD_NUMBER: builtins.int
    FIELD2_FIELD_NUMBER: builtins.int
    field1: typing.Text
    @property
    def field2(self) -> global___AnOtherMessage: ...
    def __init__(self,
        *,
        field1: typing.Text = ...,
        field2: typing.Optional[global___AnOtherMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field2",b"field2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field1",b"field1","field2",b"field2"]) -> None: ...
global___RootMessage = RootMessage

class AnOtherMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class SubMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TEXT_FIELD_NUMBER: builtins.int
        text: typing.Text
        def __init__(self,
            *,
            text: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["text",b"text"]) -> None: ...

    FIELD1_FIELD_NUMBER: builtins.int
    FIELD2_FIELD_NUMBER: builtins.int
    field1: typing.Text
    @property
    def field2(self) -> global___AnOtherMessage.SubMessage: ...
    def __init__(self,
        *,
        field1: typing.Text = ...,
        field2: typing.Optional[global___AnOtherMessage.SubMessage] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["field2",b"field2"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["field1",b"field1","field2",b"field2"]) -> None: ...
global___AnOtherMessage = AnOtherMessage

class TestSameName0(google.protobuf.message.Message):
    """Test inline structure of the same name
    from: https://github.com/so1n/protobuf_to_pydantic/issues/76
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Body(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class InputInfoEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            value: typing.Text
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        INPUT_MODEL_FIELD_NUMBER: builtins.int
        INPUT_INFO_FIELD_NUMBER: builtins.int
        input_model: typing.Text
        @property
        def input_info(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
        def __init__(self,
            *,
            input_model: typing.Text = ...,
            input_info: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["input_info",b"input_info","input_model",b"input_model"]) -> None: ...

    BODY_FIELD_NUMBER: builtins.int
    @property
    def body(self) -> global___TestSameName0.Body: ...
    def __init__(self,
        *,
        body: typing.Optional[global___TestSameName0.Body] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["body",b"body"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body"]) -> None: ...
global___TestSameName0 = TestSameName0

class TestSameName1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Body(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class OutputInfoEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: typing.Text
            value: typing.Text
            def __init__(self,
                *,
                key: typing.Text = ...,
                value: typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

        OUTPUT_MODEL_FIELD_NUMBER: builtins.int
        OUTPUT_INFO_FIELD_NUMBER: builtins.int
        output_model: typing.Text
        @property
        def output_info(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
        def __init__(self,
            *,
            output_model: typing.Text = ...,
            output_info: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["output_info",b"output_info","output_model",b"output_model"]) -> None: ...

    BODY_FIELD_NUMBER: builtins.int
    @property
    def body(self) -> global___TestSameName1.Body: ...
    def __init__(self,
        *,
        body: typing.Optional[global___TestSameName1.Body] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["body",b"body"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["body",b"body"]) -> None: ...
global___TestSameName1 = TestSameName1

class DemoResp(google.protobuf.message.Message):
    """The issue refers to an ungenerated message in the map"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class DemoStateEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___DemoState: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___DemoState] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    DEMOSTATE_FIELD_NUMBER: builtins.int
    PRAMSAREA_FIELD_NUMBER: builtins.int
    PARAMSSEASON_FIELD_NUMBER: builtins.int
    @property
    def demoState(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___DemoState]: ...
    pramsArea: builtins.int
    paramsSeason: builtins.bool
    def __init__(self,
        *,
        demoState: typing.Optional[typing.Mapping[builtins.int, global___DemoState]] = ...,
        pramsArea: builtins.int = ...,
        paramsSeason: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["demoState",b"demoState","paramsSeason",b"paramsSeason","pramsArea",b"pramsArea"]) -> None: ...
global___DemoResp = DemoResp

class DemoState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARAMSDID_FIELD_NUMBER: builtins.int
    paramsDID: builtins.int
    def __init__(self,
        *,
        paramsDID: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["paramsDID",b"paramsDID"]) -> None: ...
global___DemoState = DemoState

class WithOptionalEnumMsgEntry(google.protobuf.message.Message):
    """Test optional enum are not code gen
    from:
    - https://github.com/so1n/protobuf_to_pydantic/issues/101
    - https://github.com/so1n/protobuf_to_pydantic/issues/99
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ENUM_FIELD_NUMBER: builtins.int
    enum: global___OptionalEnum.ValueType
    def __init__(self,
        *,
        enum: typing.Optional[global___OptionalEnum.ValueType] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_enum",b"_enum","enum",b"enum"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_enum",b"_enum","enum",b"enum"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_enum",b"_enum"]) -> typing.Optional[typing_extensions.Literal["enum"]]: ...
global___WithOptionalEnumMsgEntry = WithOptionalEnumMsgEntry
