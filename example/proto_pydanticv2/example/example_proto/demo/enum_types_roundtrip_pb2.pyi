"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Status:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Status.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN: _Status.ValueType  # 0
    ACTIVE: _Status.ValueType  # 1
    INACTIVE: _Status.ValueType  # 2
    PENDING: _Status.ValueType  # 3
    COMPLETED: _Status.ValueType  # 4

class Status(_Status, metaclass=_StatusEnumTypeWrapper):
    """Test enum types for roundtrip conversion"""

UNKNOWN: Status.ValueType  # 0
ACTIVE: Status.ValueType  # 1
INACTIVE: Status.ValueType  # 2
PENDING: Status.ValueType  # 3
COMPLETED: Status.ValueType  # 4
global___Status = Status

class _Priority:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PriorityEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Priority.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    LOW: _Priority.ValueType  # 0
    MEDIUM: _Priority.ValueType  # 1
    HIGH: _Priority.ValueType  # 2
    URGENT: _Priority.ValueType  # 3

class Priority(_Priority, metaclass=_PriorityEnumTypeWrapper): ...

LOW: Priority.ValueType  # 0
MEDIUM: Priority.ValueType  # 1
HIGH: Priority.ValueType  # 2
URGENT: Priority.ValueType  # 3
global___Priority = Priority

class _ErrorCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ERROR_NONE: _ErrorCode.ValueType  # 0
    ERROR_INVALID_INPUT: _ErrorCode.ValueType  # 100
    ERROR_TIMEOUT: _ErrorCode.ValueType  # 200
    ERROR_INTERNAL: _ErrorCode.ValueType  # 500
    ERROR_UNKNOWN: _ErrorCode.ValueType  # 999

class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper):
    """Enum with non-consecutive values"""

ERROR_NONE: ErrorCode.ValueType  # 0
ERROR_INVALID_INPUT: ErrorCode.ValueType  # 100
ERROR_TIMEOUT: ErrorCode.ValueType  # 200
ERROR_INTERNAL: ErrorCode.ValueType  # 500
ERROR_UNKNOWN: ErrorCode.ValueType  # 999
global___ErrorCode = ErrorCode

@typing.final
class EnumMessage(google.protobuf.message.Message):
    """Message with enum fields"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StatusMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: global___Status.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Status.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    STATUS_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    ERROR_CODE_FIELD_NUMBER: builtins.int
    OPTIONAL_STATUS_FIELD_NUMBER: builtins.int
    PRIORITY_LIST_FIELD_NUMBER: builtins.int
    STATUS_MAP_FIELD_NUMBER: builtins.int
    status: global___Status.ValueType
    priority: global___Priority.ValueType
    error_code: global___ErrorCode.ValueType
    optional_status: global___Status.ValueType
    """Optional enum field"""
    @property
    def priority_list(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Priority.ValueType]:
        """Repeated enum field"""

    @property
    def status_map(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, global___Status.ValueType]:
        """Map with enum values"""

    def __init__(
        self,
        *,
        status: global___Status.ValueType = ...,
        priority: global___Priority.ValueType = ...,
        error_code: global___ErrorCode.ValueType = ...,
        optional_status: global___Status.ValueType | None = ...,
        priority_list: collections.abc.Iterable[global___Priority.ValueType] | None = ...,
        status_map: collections.abc.Mapping[builtins.str, global___Status.ValueType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_optional_status", b"_optional_status", "optional_status", b"optional_status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_optional_status", b"_optional_status", "error_code", b"error_code", "optional_status", b"optional_status", "priority", b"priority", "priority_list", b"priority_list", "status", b"status", "status_map", b"status_map"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_optional_status", b"_optional_status"]) -> typing.Literal["optional_status"] | None: ...

global___EnumMessage = EnumMessage

@typing.final
class ComplexEnumMessage(google.protobuf.message.Message):
    """Message with multiple enum references"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TaskPrioritiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: global___Priority.ValueType
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Priority.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class NestedEnum(google.protobuf.message.Message):
        """Nested message with enums"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NESTED_STATUS_FIELD_NUMBER: builtins.int
        NESTED_PRIORITY_FIELD_NUMBER: builtins.int
        nested_status: global___Status.ValueType
        nested_priority: global___Priority.ValueType
        def __init__(
            self,
            *,
            nested_status: global___Status.ValueType = ...,
            nested_priority: global___Priority.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["nested_priority", b"nested_priority", "nested_status", b"nested_status"]) -> None: ...

    PRIMARY_STATUS_FIELD_NUMBER: builtins.int
    STATUS_HISTORY_FIELD_NUMBER: builtins.int
    TASK_PRIORITIES_FIELD_NUMBER: builtins.int
    LAST_ERROR_FIELD_NUMBER: builtins.int
    NESTED_FIELD_NUMBER: builtins.int
    NESTED_LIST_FIELD_NUMBER: builtins.int
    primary_status: global___Status.ValueType
    last_error: global___ErrorCode.ValueType
    @property
    def status_history(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Status.ValueType]: ...
    @property
    def task_priorities(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, global___Priority.ValueType]: ...
    @property
    def nested(self) -> global___ComplexEnumMessage.NestedEnum: ...
    @property
    def nested_list(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComplexEnumMessage.NestedEnum]: ...
    def __init__(
        self,
        *,
        primary_status: global___Status.ValueType = ...,
        status_history: collections.abc.Iterable[global___Status.ValueType] | None = ...,
        task_priorities: collections.abc.Mapping[builtins.str, global___Priority.ValueType] | None = ...,
        last_error: global___ErrorCode.ValueType | None = ...,
        nested: global___ComplexEnumMessage.NestedEnum | None = ...,
        nested_list: collections.abc.Iterable[global___ComplexEnumMessage.NestedEnum] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_last_error", b"_last_error", "last_error", b"last_error", "nested", b"nested"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_last_error", b"_last_error", "last_error", b"last_error", "nested", b"nested", "nested_list", b"nested_list", "primary_status", b"primary_status", "status_history", b"status_history", "task_priorities", b"task_priorities"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_last_error", b"_last_error"]) -> typing.Literal["last_error"] | None: ...

global___ComplexEnumMessage = ComplexEnumMessage
