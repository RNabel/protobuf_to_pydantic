"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.duration_pb2
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _State:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INACTIVE: _State.ValueType  # 0
    PENDING: _State.ValueType  # 1
    ACTIVE: _State.ValueType  # 2

class State(_State, metaclass=_StateEnumTypeWrapper): ...

INACTIVE: State.ValueType  # 0
PENDING: State.ValueType  # 1
ACTIVE: State.ValueType  # 2
global___State = State

@typing.final
class FloatTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    ignore_test: builtins.float
    def __init__(
        self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        ignore_test: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___FloatTest = FloatTest

@typing.final
class DoubleTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    ignore_test: builtins.float
    def __init__(
        self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        ignore_test: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___DoubleTest = DoubleTest

@typing.final
class Int32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Int32Test = Int32Test

@typing.final
class Uint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Uint32Test = Uint32Test

@typing.final
class Sint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Sint32Test = Sint32Test

@typing.final
class Int64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Int64Test = Int64Test

@typing.final
class Uint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Uint64Test = Uint64Test

@typing.final
class Sint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Sint64Test = Sint64Test

@typing.final
class Fixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Fixed32Test = Fixed32Test

@typing.final
class Fixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Fixed64Test = Fixed64Test

@typing.final
class Sfixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Sfixed32Test = Sfixed32Test

@typing.final
class Sfixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    ignore_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        ignore_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___Sfixed64Test = Sfixed64Test

@typing.final
class BoolTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOL_1_TEST_FIELD_NUMBER: builtins.int
    BOOL_2_TEST_FIELD_NUMBER: builtins.int
    bool_1_test: builtins.bool
    bool_2_test: builtins.bool
    def __init__(
        self,
        *,
        bool_1_test: builtins.bool = ...,
        bool_2_test: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["bool_1_test", b"bool_1_test", "bool_2_test", b"bool_2_test"]) -> None: ...

global___BoolTest = BoolTest

@typing.final
class StringTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    LEN_TEST_FIELD_NUMBER: builtins.int
    S_RANGE_LEN_TEST_FIELD_NUMBER: builtins.int
    B_RANGE_LEN_TEST_FIELD_NUMBER: builtins.int
    PATTERN_TEST_FIELD_NUMBER: builtins.int
    PREFIX_TEST_FIELD_NUMBER: builtins.int
    SUFFIX_TEST_FIELD_NUMBER: builtins.int
    CONTAINS_TEST_FIELD_NUMBER: builtins.int
    NOT_CONTAINS_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    EMAIL_TEST_FIELD_NUMBER: builtins.int
    HOSTNAME_TEST_FIELD_NUMBER: builtins.int
    IP_TEST_FIELD_NUMBER: builtins.int
    IPV4_TEST_FIELD_NUMBER: builtins.int
    IPV6_TEST_FIELD_NUMBER: builtins.int
    URI_TEST_FIELD_NUMBER: builtins.int
    URI_REF_TEST_FIELD_NUMBER: builtins.int
    ADDRESS_TEST_FIELD_NUMBER: builtins.int
    UUID_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.str
    len_test: builtins.str
    s_range_len_test: builtins.str
    b_range_len_test: builtins.str
    pattern_test: builtins.str
    prefix_test: builtins.str
    suffix_test: builtins.str
    contains_test: builtins.str
    not_contains_test: builtins.str
    in_test: builtins.str
    not_in_test: builtins.str
    email_test: builtins.str
    hostname_test: builtins.str
    ip_test: builtins.str
    ipv4_test: builtins.str
    ipv6_test: builtins.str
    uri_test: builtins.str
    uri_ref_test: builtins.str
    address_test: builtins.str
    uuid_test: builtins.str
    ignore_test: builtins.str
    def __init__(
        self,
        *,
        const_test: builtins.str = ...,
        len_test: builtins.str = ...,
        s_range_len_test: builtins.str = ...,
        b_range_len_test: builtins.str = ...,
        pattern_test: builtins.str = ...,
        prefix_test: builtins.str = ...,
        suffix_test: builtins.str = ...,
        contains_test: builtins.str = ...,
        not_contains_test: builtins.str = ...,
        in_test: builtins.str = ...,
        not_in_test: builtins.str = ...,
        email_test: builtins.str = ...,
        hostname_test: builtins.str = ...,
        ip_test: builtins.str = ...,
        ipv4_test: builtins.str = ...,
        ipv6_test: builtins.str = ...,
        uri_test: builtins.str = ...,
        uri_ref_test: builtins.str = ...,
        address_test: builtins.str = ...,
        uuid_test: builtins.str = ...,
        ignore_test: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["address_test", b"address_test", "b_range_len_test", b"b_range_len_test", "const_test", b"const_test", "contains_test", b"contains_test", "email_test", b"email_test", "hostname_test", b"hostname_test", "ignore_test", b"ignore_test", "in_test", b"in_test", "ip_test", b"ip_test", "ipv4_test", b"ipv4_test", "ipv6_test", b"ipv6_test", "len_test", b"len_test", "not_contains_test", b"not_contains_test", "not_in_test", b"not_in_test", "pattern_test", b"pattern_test", "prefix_test", b"prefix_test", "s_range_len_test", b"s_range_len_test", "suffix_test", b"suffix_test", "uri_ref_test", b"uri_ref_test", "uri_test", b"uri_test", "uuid_test", b"uuid_test"]) -> None: ...

global___StringTest = StringTest

@typing.final
class BytesTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    LEN_TEST_FIELD_NUMBER: builtins.int
    RANGE_LEN_TEST_FIELD_NUMBER: builtins.int
    PATTERN_TEST_FIELD_NUMBER: builtins.int
    PREFIX_TEST_FIELD_NUMBER: builtins.int
    SUFFIX_TEST_FIELD_NUMBER: builtins.int
    CONTAINS_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.bytes
    len_test: builtins.bytes
    range_len_test: builtins.bytes
    pattern_test: builtins.bytes
    prefix_test: builtins.bytes
    suffix_test: builtins.bytes
    contains_test: builtins.bytes
    in_test: builtins.bytes
    not_in_test: builtins.bytes
    def __init__(
        self,
        *,
        const_test: builtins.bytes = ...,
        len_test: builtins.bytes = ...,
        range_len_test: builtins.bytes = ...,
        pattern_test: builtins.bytes = ...,
        prefix_test: builtins.bytes = ...,
        suffix_test: builtins.bytes = ...,
        contains_test: builtins.bytes = ...,
        in_test: builtins.bytes = ...,
        not_in_test: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "contains_test", b"contains_test", "in_test", b"in_test", "len_test", b"len_test", "not_in_test", b"not_in_test", "pattern_test", b"pattern_test", "prefix_test", b"prefix_test", "range_len_test", b"range_len_test", "suffix_test", b"suffix_test"]) -> None: ...

global___BytesTest = BytesTest

@typing.final
class EnumTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    DEFINED_ONLY_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    const_test: global___State.ValueType
    defined_only_test: global___State.ValueType
    in_test: global___State.ValueType
    not_in_test: global___State.ValueType
    def __init__(
        self,
        *,
        const_test: global___State.ValueType = ...,
        defined_only_test: global___State.ValueType = ...,
        in_test: global___State.ValueType = ...,
        not_in_test: global___State.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "defined_only_test", b"defined_only_test", "in_test", b"in_test", "not_in_test", b"not_in_test"]) -> None: ...

global___EnumTest = EnumTest

@typing.final
class MapTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PairTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class NoParseTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class KeysTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class ValuesTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class KeysValuesTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class IgnoreTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    PAIR_TEST_FIELD_NUMBER: builtins.int
    NO_PARSE_TEST_FIELD_NUMBER: builtins.int
    KEYS_TEST_FIELD_NUMBER: builtins.int
    VALUES_TEST_FIELD_NUMBER: builtins.int
    KEYS_VALUES_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    @property
    def pair_test(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def no_parse_test(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def keys_test(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def values_test(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def keys_values_test(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.timestamp_pb2.Timestamp]: ...
    @property
    def ignore_test(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    def __init__(
        self,
        *,
        pair_test: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        no_parse_test: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        keys_test: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        values_test: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        keys_values_test: collections.abc.Mapping[builtins.str, google.protobuf.timestamp_pb2.Timestamp] | None = ...,
        ignore_test: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ignore_test", b"ignore_test", "keys_test", b"keys_test", "keys_values_test", b"keys_values_test", "no_parse_test", b"no_parse_test", "pair_test", b"pair_test", "values_test", b"values_test"]) -> None: ...

global___MapTest = MapTest

@typing.final
class MessageTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SKIP_TEST_FIELD_NUMBER: builtins.int
    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    skip_test: builtins.str
    required_test: builtins.str
    def __init__(
        self,
        *,
        skip_test: builtins.str = ...,
        required_test: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["required_test", b"required_test", "skip_test", b"skip_test"]) -> None: ...

global___MessageTest = MessageTest

@typing.final
class RepeatedTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RANGE_TEST_FIELD_NUMBER: builtins.int
    UNIQUE_TEST_FIELD_NUMBER: builtins.int
    ITEMS_STRING_TEST_FIELD_NUMBER: builtins.int
    ITEMS_DOUBLE_TEST_FIELD_NUMBER: builtins.int
    ITEMS_INT32_TEST_FIELD_NUMBER: builtins.int
    ITEMS_TIMESTAMP_TEST_FIELD_NUMBER: builtins.int
    ITEMS_DURATION_TEST_FIELD_NUMBER: builtins.int
    ITEMS_BYTES_TEST_FIELD_NUMBER: builtins.int
    IGNORE_TEST_FIELD_NUMBER: builtins.int
    @property
    def range_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def unique_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def items_string_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def items_double_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def items_int32_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def items_timestamp_test(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.timestamp_pb2.Timestamp]: ...
    @property
    def items_duration_test(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.protobuf.duration_pb2.Duration]: ...
    @property
    def items_bytes_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def ignore_test(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        range_test: collections.abc.Iterable[builtins.str] | None = ...,
        unique_test: collections.abc.Iterable[builtins.str] | None = ...,
        items_string_test: collections.abc.Iterable[builtins.str] | None = ...,
        items_double_test: collections.abc.Iterable[builtins.float] | None = ...,
        items_int32_test: collections.abc.Iterable[builtins.int] | None = ...,
        items_timestamp_test: collections.abc.Iterable[google.protobuf.timestamp_pb2.Timestamp] | None = ...,
        items_duration_test: collections.abc.Iterable[google.protobuf.duration_pb2.Duration] | None = ...,
        items_bytes_test: collections.abc.Iterable[builtins.bytes] | None = ...,
        ignore_test: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ignore_test", b"ignore_test", "items_bytes_test", b"items_bytes_test", "items_double_test", b"items_double_test", "items_duration_test", b"items_duration_test", "items_int32_test", b"items_int32_test", "items_string_test", b"items_string_test", "items_timestamp_test", b"items_timestamp_test", "range_test", b"range_test", "unique_test", b"unique_test"]) -> None: ...

global___RepeatedTest = RepeatedTest

@typing.final
class AnyTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    @property
    def required_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def not_in_test(self) -> google.protobuf.any_pb2.Any: ...
    @property
    def in_test(self) -> google.protobuf.any_pb2.Any: ...
    def __init__(
        self,
        *,
        required_test: google.protobuf.any_pb2.Any | None = ...,
        not_in_test: google.protobuf.any_pb2.Any | None = ...,
        in_test: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["in_test", b"in_test", "not_in_test", b"not_in_test", "required_test", b"required_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["in_test", b"in_test", "not_in_test", b"not_in_test", "required_test", b"required_test"]) -> None: ...

global___AnyTest = AnyTest

@typing.final
class DurationTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    @property
    def required_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def const_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def range_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def range_e_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def in_test(self) -> google.protobuf.duration_pb2.Duration: ...
    @property
    def not_in_test(self) -> google.protobuf.duration_pb2.Duration: ...
    def __init__(
        self,
        *,
        required_test: google.protobuf.duration_pb2.Duration | None = ...,
        const_test: google.protobuf.duration_pb2.Duration | None = ...,
        range_test: google.protobuf.duration_pb2.Duration | None = ...,
        range_e_test: google.protobuf.duration_pb2.Duration | None = ...,
        in_test: google.protobuf.duration_pb2.Duration | None = ...,
        not_in_test: google.protobuf.duration_pb2.Duration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["const_test", b"const_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test", "required_test", b"required_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "in_test", b"in_test", "not_in_test", b"not_in_test", "range_e_test", b"range_e_test", "range_test", b"range_test", "required_test", b"required_test"]) -> None: ...

global___DurationTest = DurationTest

@typing.final
class TimestampTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_TEST_FIELD_NUMBER: builtins.int
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    LT_NOW_TEST_FIELD_NUMBER: builtins.int
    GT_NOW_TEST_FIELD_NUMBER: builtins.int
    WITHIN_TEST_FIELD_NUMBER: builtins.int
    WITHIN_AND_GT_NOW_TEST_FIELD_NUMBER: builtins.int
    @property
    def required_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def const_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def range_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def range_e_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def lt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def gt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def within_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def within_and_gt_now_test(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        required_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        const_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        range_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        range_e_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        lt_now_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        gt_now_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        within_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        within_and_gt_now_test: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["const_test", b"const_test", "gt_now_test", b"gt_now_test", "lt_now_test", b"lt_now_test", "range_e_test", b"range_e_test", "range_test", b"range_test", "required_test", b"required_test", "within_and_gt_now_test", b"within_and_gt_now_test", "within_test", b"within_test"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "gt_now_test", b"gt_now_test", "lt_now_test", b"lt_now_test", "range_e_test", b"range_e_test", "range_test", b"range_test", "required_test", b"required_test", "within_and_gt_now_test", b"within_and_gt_now_test", "within_test", b"within_test"]) -> None: ...

global___TimestampTest = TimestampTest

@typing.final
class MessageDisabledTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___MessageDisabledTest = MessageDisabledTest

@typing.final
class MessageIgnoredTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    def __init__(
        self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["const_test", b"const_test", "range_e_test", b"range_e_test", "range_test", b"range_test"]) -> None: ...

global___MessageIgnoredTest = MessageIgnoredTest

@typing.final
class OneOfTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    header: builtins.str
    x: builtins.str
    y: builtins.int
    def __init__(
        self,
        *,
        header: builtins.str = ...,
        x: builtins.str = ...,
        y: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["id", b"id", "x", b"x", "y", b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["header", b"header", "id", b"id", "x", b"x", "y", b"y"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["id", b"id"]) -> typing.Literal["x", "y"] | None: ...

global___OneOfTest = OneOfTest

@typing.final
class OneOfNotTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    header: builtins.str
    x: builtins.str
    y: builtins.int
    def __init__(
        self,
        *,
        header: builtins.str = ...,
        x: builtins.str = ...,
        y: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["id", b"id", "x", b"x", "y", b"y"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["header", b"header", "id", b"id", "x", b"x", "y", b"y"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["id", b"id"]) -> typing.Literal["x", "y"] | None: ...

global___OneOfNotTest = OneOfNotTest

@typing.final
class NestedMessage(google.protobuf.message.Message):
    """test nested message"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class UserPayMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BANK_NUMBER_FIELD_NUMBER: builtins.int
        EXP_FIELD_NUMBER: builtins.int
        UUID_FIELD_NUMBER: builtins.int
        bank_number: builtins.str
        uuid: builtins.str
        @property
        def exp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(
            self,
            *,
            bank_number: builtins.str = ...,
            exp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            uuid: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["exp", b"exp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["bank_number", b"bank_number", "exp", b"exp", "uuid", b"uuid"]) -> None: ...

    @typing.final
    class NotEnableUserPayMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        BANK_NUMBER_FIELD_NUMBER: builtins.int
        EXP_FIELD_NUMBER: builtins.int
        UUID_FIELD_NUMBER: builtins.int
        bank_number: builtins.str
        uuid: builtins.str
        @property
        def exp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        def __init__(
            self,
            *,
            bank_number: builtins.str = ...,
            exp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            uuid: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["exp", b"exp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["bank_number", b"bank_number", "exp", b"exp", "uuid", b"uuid"]) -> None: ...

    @typing.final
    class StringInMapTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___StringTest: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___StringTest | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class MapInMapTestEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___MapTest: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___MapTest | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    STRING_IN_MAP_TEST_FIELD_NUMBER: builtins.int
    MAP_IN_MAP_TEST_FIELD_NUMBER: builtins.int
    USER_PAY_FIELD_NUMBER: builtins.int
    NOT_ENABLE_USER_PAY_FIELD_NUMBER: builtins.int
    EMPTY_FIELD_NUMBER: builtins.int
    AFTER_REFER_FIELD_NUMBER: builtins.int
    @property
    def string_in_map_test(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___StringTest]: ...
    @property
    def map_in_map_test(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___MapTest]: ...
    @property
    def user_pay(self) -> global___NestedMessage.UserPayMessage: ...
    @property
    def not_enable_user_pay(self) -> global___NestedMessage.NotEnableUserPayMessage: ...
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    @property
    def after_refer(self) -> global___AfterReferMessage: ...
    def __init__(
        self,
        *,
        string_in_map_test: collections.abc.Mapping[builtins.str, global___StringTest] | None = ...,
        map_in_map_test: collections.abc.Mapping[builtins.str, global___MapTest] | None = ...,
        user_pay: global___NestedMessage.UserPayMessage | None = ...,
        not_enable_user_pay: global___NestedMessage.NotEnableUserPayMessage | None = ...,
        empty: google.protobuf.empty_pb2.Empty | None = ...,
        after_refer: global___AfterReferMessage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["after_refer", b"after_refer", "empty", b"empty", "not_enable_user_pay", b"not_enable_user_pay", "user_pay", b"user_pay"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["after_refer", b"after_refer", "empty", b"empty", "map_in_map_test", b"map_in_map_test", "not_enable_user_pay", b"not_enable_user_pay", "string_in_map_test", b"string_in_map_test", "user_pay", b"user_pay"]) -> None: ...

global___NestedMessage = NestedMessage

@typing.final
class AfterReferMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UID_FIELD_NUMBER: builtins.int
    AGE_FIELD_NUMBER: builtins.int
    uid: builtins.str
    age: builtins.int
    def __init__(
        self,
        *,
        uid: builtins.str = ...,
        age: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["age", b"age", "uid", b"uid"]) -> None: ...

global___AfterReferMessage = AfterReferMessage
